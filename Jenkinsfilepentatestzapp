pipeline {
    agent any
    options {
        skipDefaultCheckout(true)
    }
    stages {
        stage('Code checkout from GitHub') {
            steps {
                script {
                    cleanWs()
                    git credentialsId: 'github-pat', url: 'https://github.com/mt524/abcd-student', branch: 'main'
                }
            }
        }
        stage('Prepare') {
            steps {
                sh 'mkdir -p results/'
            }
        }
        stage('DAST') {
            steps {
                // Usuń istniejący kontener zap, jeśli istnieje
                sh 'docker rm -f zap || true'
                sh 'docker stop juice-shop || true'
    
                // Uruchom kontener juice-shop
                sh '''
                    docker run --name juice-shop -d --rm -p 3000:3000 bkimminich/juice-shop
                    sleep 10
                '''
       
                // Uruchom kontener zap i wykonaj skanowanie, a następnie skopiuj raporty
                sh '''
                    docker run --name zap \
                        -v /home/Projects/abcd-student/.zap:/zap/wrk/:rw \
                        -t ghcr.io/zaproxy/zaproxy:stable \
                        bash -c "
                            zap.sh -cmd -addonupdate; 
                            zap.sh -cmd -addoninstall communityScripts -addoninstall pscanrulesAlpha -addoninstall pscanrulesBeta -autorun /zap/wrk/passive.yaml; 
                            if [ -d /zap/wrk/reports ]; then 
                                docker cp zap:/zap/wrk/reports/zap_html_report.html ${WORKSPACE}/results/zap_html_report.html
                                docker cp zap:/zap/wrk/reports/zap_xml_report.xml ${WORKSPACE}/results/zap_xml_report.xml
                            fi
                        "
                '''
            }
        }
        stage('Clean Up Containers') {
            steps {
                // Zatrzymaj i usuń kontenery
                sh 'docker stop zap juice-shop || true'
                sh 'docker rm zap || true'
            }
        }
    }
    post {
        always {
            echo 'Archiving results...'
            archiveArtifacts artifacts: 'results/**/*', fingerprint: true, allowEmptyArchive: true
            echo 'Sending reports to DefectDojo...'
            defectDojoPublisher(artifact: 'results/zap_xml_report.xml', productName: 'Juice Shop', scanType: 'ZAP Scan', engagementName: 'michal.tomczak@opi.org.pl')
        }
    }
}
